[project]
name = "mltemplate"
version = "0.1.0"
description = "An end-to-end starter template for machine learning projects."
authors = [
    { name = "JeremyWurbs" }
]
dependencies = [
    "torch>=2.1.2",
    "torchvision>=0.16.2",
    "torchmetrics>=1.2.1",
    "lightning>=2.1.3",
    "hydra-core>=1.3.2",
    "mlflow>=2.9.2",
    "tensorboard>=2.15.1",
    "tensorboardx>=2.6.2.2",
    "fastapi>=0.108.0",
    "gunicorn>=21.2.0",
    "uvicorn>=0.25.0",
    "discord.py>=2.3.2",
    "Pillow>=10.1.0",
    "numpy>=1.26.2",
    "opencv-python>=4.9.0.80",
    "matplotlib>=3.8.2",
]
readme = "README.md"
requires-python = ">= 3.10"

[project.scripts]
hello = "mltemplate:hello"
train = "mltemplate.scripts.train:entry"
mltemplate_setup = "mltemplate_setup:initial_mltemplate_setup"
gateway_server_app = "mltemplate.backend.gateway.server:app"
discord_client = "mltemplate.backend.discord.discord_client:run_discord_client"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = [
    "pytest>=7.4.4",
    "pytest-cov>=4.1.0",
    "pylint>=3.0.3",
    "httpx>=0.26.0",
    "Sphinx>=7.2.6",
    "sphinx-rtd-theme>=2.0.0",
    "sphinx-simplepdf>=1.6.0",
    "black>=23.12.1",
    "isort>=5.13.2",
    "graphviz>=0.20.1",
]

[tool.rye.scripts]
lint = {chain = [
    "echo:pylint:mltemplate",
    "lint:pylint:mltemplate",
    "echo:pylint:tests",
    "lint:pylint:tests",
    "echo:isort:check:mltemplate",
    "lint:isort:check:mltemplate",
    "echo:isort:check:tests",
    "lint:isort:check:tests",
    "echo:black:check:mltemplate",
    "lint:black:check:mltemplate",
    "echo:black:check:tests",
    "lint:black:check:tests"]}
"echo:pylint:mltemplate" = "echo 'pylint mltemplate/'"
"lint:pylint:mltemplate" = "pylint mltemplate/"
"echo:pylint:tests" = "echo 'pylint --disable=protected-access tests/'"
"lint:pylint:tests" = "pylint --disable=protected-access tests/"
"echo:isort:check:mltemplate" = "echo '\nisort -l 120 --check mltemplate/'"
"lint:isort:check:mltemplate" = "isort -l 120 --check mltemplate/"
"echo:isort:check:tests" = "echo '\nisort -l 120 --check tests/'"
"lint:isort:check:tests" = "isort -l 120 --check tests/"
"echo:black:check:mltemplate" = "echo '\nblack -l 120 --check mltemplate/'"
"lint:black:check:mltemplate" = "black -l 120 --check mltemplate/"
"echo:black:check:tests" = "echo '\nblack -l 120 --check tests/'"
"lint:black:check:tests" = "black -l 120 --check tests/"
format = {chain = [
    "echo:isort:mltemplate",
    "format:isort:mltemplate",
    "echo:black:format:mltemplate",
    "format:black:format:mltemplate",
    "echo:isort:tests",
    "format:isort:tests",
    "echo:black:format:tests",
    "format:black:format:tests"] }
"echo:isort:mltemplate" = "echo '\nisort -l 120 mltemplate/'"
"format:isort:mltemplate" = "isort -l 120 mltemplate/"
"echo:black:format:mltemplate" = "echo '\nblack -l 120 mltemplate/'"
"format:black:format:mltemplate" = "black -l 120 mltemplate/"
"echo:isort:tests" = "echo '\nisort -l 120 tests/'"
"format:isort:tests" = "isort -l 120 tests/"
"echo:black:format:tests" = "echo '\nblack -l 120 tests/'"
"format:black:format:tests" = "black -l 120 tests/"
test = {chain = ["echo:test", "test:pytest"]}
"echo:test" = "echo 'pytest -rs --cov=mltemplate --maxfail=1 --cov-report term-missing -W ignore::DeprecationWarning tests/'"
"test:pytest" = "pytest -rs --cov=mltemplate --maxfail=1 --cov-report term-missing -W ignore::DeprecationWarning tests/"
graph-dependencies = {chain = ["echo:dependency-graph", "dependency-graph:mltemplate"]}
"echo:dependency-graph" = "echo 'pyreverse -o png --colorized --max-color-depth 3 --no-standalone mltemplate'"
"dependency-graph:mltemplate" = "pyreverse -o png --colorized --max-color-depth 3 --no-standalone mltemplate"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["mltemplate"]

[tool.isort]
profile = "black"
